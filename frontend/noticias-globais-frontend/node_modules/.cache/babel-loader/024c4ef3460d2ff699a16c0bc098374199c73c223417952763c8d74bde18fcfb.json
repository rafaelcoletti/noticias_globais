{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rafae\\\\onedrive\\\\\\xC1rea de Trabalho\\\\noticias_globais\\\\frontend\\\\noticias-globais-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Importe os módulos necessários\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [keyword, setKeyword] = useState('');\n  const [news, setNews] = useState([]);\n  const [filteredNews, setFilteredNews] = useState([]);\n  const [searchClicked, setSearchClicked] = useState(false);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [date, setDate] = useState('');\n  const handleSearch = async () => {\n    try {\n      const apiKey = 'e2b489b9e52d4baf8d0b090a9c1d9319';\n      const response = await axios.get(`https://newsapi.org/v2/everything?apiKey=${apiKey}&q=${keyword}&pageSize=20`);\n\n      // Suponha que 'results' seja um array de objetos representando os resultados retornados na página\n      for (let i = 0; i < results.length; i++) {\n        const result = results[i];\n        // Faça uma solicitação POST para adicionar 'result' ao MongoDB\n        axios.post('http://localhost:3001/api/news', {\n          title: result.title,\n          content: result.content,\n          date: result.date\n        }).then(response => {\n          console.log('Notícia adicionada com sucesso:', response.data);\n        }).catch(error => {\n          console.error('Erro ao adicionar notícia:', error);\n        });\n      }\n\n      // Envia as notícias para o backend\n      await axios.post('http://localhost:3000/api/news', {\n        news: response.data.articles\n      });\n\n      // Filtra as notícias com base na palavra-chave\n      const filteredNews = response.data.articles.filter(item => item.title.toLowerCase().includes(keyword.toLowerCase()));\n\n      // Ordena as notícias por data de publicação (mais recente primeiro)\n      filteredNews.sort((a, b) => new Date(b.publishedAt) - new Date(a.publishedAt));\n\n      // Atualiza o estado das notícias no frontend\n      setNews(filteredNews);\n    } catch (error) {\n      console.error('Erro ao buscar notícias:', error);\n    }\n  };\n  const handleClick = async () => {\n    try {\n      // Faça sua busca aqui...\n      // Supondo que você tenha os dados da notícia disponíveis em title, content e date\n\n      const response = await axios.post('http://localhost:3000/api/news', {\n        title: \"string\",\n        content: \"string\",\n        date: Date\n      });\n      if (response.status === 200 || response.status === 201) {\n        console.log('Notícia adicionada com sucesso!');\n      } else {\n        console.error('Erro ao adicionar notícia:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Erro ao adicionar notícia:', error.message);\n    }\n    // Define a palavra-chave, marca que o botão de busca foi clicado e chama a busca\n    setKeyword(''); // Limpa o estado da palavra-chave se desejar\n    setSearchClicked(true);\n    handleSearch();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Not\\xEDcias Globais\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pesquisar por palavra-chave: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"keyword\",\n        value: keyword,\n        onChange: e => setKeyword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: news.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Data de publica\\xE7\\xE3o: \", new Date(item.publishedAt).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, item.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"O6OsLZ+vpMHGGkmE314aqWJcPWo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","keyword","setKeyword","news","setNews","filteredNews","setFilteredNews","searchClicked","setSearchClicked","title","setTitle","content","setContent","date","setDate","handleSearch","apiKey","response","get","i","results","length","result","post","then","console","log","data","catch","error","articles","filter","item","toLowerCase","includes","sort","a","b","Date","publishedAt","handleClick","status","statusText","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","target","onClick","map","description","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/rafae/onedrive/Área de Trabalho/noticias_globais/frontend/noticias-globais-frontend/src/App.js"],"sourcesContent":["// Importe os módulos necessários\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [keyword, setKeyword] = useState('');\r\n  const [news, setNews] = useState([]);\r\n  const [filteredNews, setFilteredNews] = useState([]);\r\n  const [searchClicked, setSearchClicked] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [date, setDate] = useState('');\r\n  \r\n  const handleSearch = async () => {\r\n    try {\r\n        const apiKey = 'e2b489b9e52d4baf8d0b090a9c1d9319';\r\n        const response = await axios.get(\r\n          `https://newsapi.org/v2/everything?apiKey=${apiKey}&q=${keyword}&pageSize=20`\r\n        );\r\n\r\n        // Suponha que 'results' seja um array de objetos representando os resultados retornados na página\r\n        for (let i = 0; i < results.length; i++) {\r\n          const result = results[i];\r\n          // Faça uma solicitação POST para adicionar 'result' ao MongoDB\r\n          axios.post('http://localhost:3001/api/news', {\r\n              title: result.title,\r\n              content: result.content,\r\n              date: result.date\r\n          })\r\n          .then(response => {\r\n              console.log('Notícia adicionada com sucesso:', response.data);\r\n          })\r\n          .catch(error => {\r\n              console.error('Erro ao adicionar notícia:', error);\r\n          });\r\n        }\r\n      \r\n        // Envia as notícias para o backend\r\n        await axios.post('http://localhost:3000/api/news', {\r\n          news: response.data.articles\r\n        });\r\n\r\n        // Filtra as notícias com base na palavra-chave\r\n        const filteredNews = response.data.articles.filter(\r\n            (item) => item.title.toLowerCase().includes(keyword.toLowerCase())\r\n        );\r\n\r\n        // Ordena as notícias por data de publicação (mais recente primeiro)\r\n        filteredNews.sort((a, b) => new Date(b.publishedAt) - new Date(a.publishedAt));\r\n\r\n        // Atualiza o estado das notícias no frontend\r\n        setNews(filteredNews);\r\n    } catch (error) {\r\n        console.error('Erro ao buscar notícias:', error);\r\n    }\r\n};\r\n   \r\n  const handleClick = async () => {\r\n    try {\r\n      // Faça sua busca aqui...\r\n      // Supondo que você tenha os dados da notícia disponíveis em title, content e date\r\n\r\n      const response = await axios.post('http://localhost:3000/api/news', {\r\n          title: \"string\",\r\n          content: \"string\",\r\n          date: Date\r\n      });\r\n\r\n      if (response.status === 200 || response.status === 201) {\r\n          console.log('Notícia adicionada com sucesso!');\r\n      } else {\r\n          console.error('Erro ao adicionar notícia:', response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao adicionar notícia:', error.message);\r\n    }\r\n    // Define a palavra-chave, marca que o botão de busca foi clicado e chama a busca\r\n    setKeyword(''); // Limpa o estado da palavra-chave se desejar\r\n    setSearchClicked(true);\r\n    handleSearch();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notícias Globais</h1>\r\n      <div>\r\n        <label>Pesquisar por palavra-chave: </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"keyword\"\r\n          value={keyword}\r\n          onChange={(e) => setKeyword(e.target.value)}\r\n        />\r\n        <button onClick={handleClick}>Buscar</button>\r\n      </div>\r\n      <ul>\r\n        {news.map((item) => (\r\n          <li key={item.title}>\r\n            <h3>{item.title}</h3>\r\n            <p>{item.description}</p>\r\n            <p>Data de publicação: {new Date(item.publishedAt).toLocaleDateString()}</p>\r\n            {/* Outros detalhes da notícia... */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}