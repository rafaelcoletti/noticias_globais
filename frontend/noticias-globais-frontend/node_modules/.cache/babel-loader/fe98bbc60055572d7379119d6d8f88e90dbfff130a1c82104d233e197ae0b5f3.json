{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rafae\\\\onedrive\\\\\\xC1rea de Trabalho\\\\noticias_globais\\\\frontend\\\\noticias-globais-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\n\n// Importe os módulos necessários\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [keyword, setKeyword] = useState('');\n  const [news, setNews] = useState([]);\n  const [filteredNews, setFilteredNews] = useState([]);\n  const [searchClicked, setSearchClicked] = useState(false);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [date, setDate] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const handleSearch = async () => {\n    try {\n      const apiKey = 'e2b489b9e52d4baf8d0b090a9c1d9319';\n      const response = await axios.get(`https://newsapi.org/v2/everything?apiKey=${apiKey}&q=${keyword}&pageSize=20`);\n\n      // Verifique os dados recebidos antes de enviar para o backend\n      console.log('Dados recebidos do servidor:', response.data.articles);\n\n      // Envia as notícias para o backend apenas se os dados estiverem completos\n      if (response.data.articles && response.data.articles.length > 0) {\n        await axios.post('http://localhost:3000/api/news', {\n          news: response.data.articles.map((article, index) => ({\n            id_noticia: index + 1,\n            titulo_noticia: article.title,\n            conteudo_noticia: article.content,\n            data_de_publicacao: article.publishedAt\n          }))\n        });\n      } else {\n        console.error('Erro: Dados recebidos incompletos ou vazios');\n      }\n\n      // Filtra as notícias com base na palavra-chave\n      const filteredNews = response.data.articles.filter(item => item.title.toLowerCase().includes(keyword.toLowerCase()));\n\n      // Ordena as notícias por data de publicação (mais recente primeiro)\n      filteredNews.sort((a, b) => new Date(b.publishedAt) - new Date(a.publishedAt));\n\n      // Atualiza o estado das notícias no frontend\n      setNews(response.data.articles);\n    } catch (error) {\n      console.error('Erro ao buscar notícias:', error);\n    }\n  };\n  const handleClick = async () => {\n    try {\n      // Faça sua busca aqui...\n      // Supondo que você tenha os dados da notícia disponíveis em title, content e date\n\n      for (const item of news) {\n        // Insira os dados da notícia no banco de dados\n        await axios.post('http://localhost:3000/api/news', {\n          title: item.title,\n          content: item.content,\n          date: item.publishedAt\n        });\n      }\n      console.log('Notícias adicionadas com sucesso!');\n    } catch (error) {\n      console.error('Erro ao adicionar notícias:', error.message);\n    }\n\n    // Define a palavra-chave, marca que o botão de busca foi clicado e chama a busca\n    setKeyword(''); // Limpa o estado da palavra-chave se desejar\n    setSearchClicked(true);\n    handleSearch();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Not\\xEDcias Globais\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pesquisar por palavra-chave: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: keyword,\n        onChange: e => setKeyword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: news.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Data de publica\\xE7\\xE3o: \", new Date(item.publishedAt).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dfQ/6OKvV901V4nqEE8xmMPha9I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","keyword","setKeyword","news","setNews","filteredNews","setFilteredNews","searchClicked","setSearchClicked","title","setTitle","content","setContent","date","setDate","searchResults","setSearchResults","handleSearch","apiKey","response","get","console","log","data","articles","length","post","map","article","index","id_noticia","titulo_noticia","conteudo_noticia","data_de_publicacao","publishedAt","error","filter","item","toLowerCase","includes","sort","a","b","Date","handleClick","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","description","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/rafae/onedrive/Área de Trabalho/noticias_globais/frontend/noticias-globais-frontend/src/App.js"],"sourcesContent":["// App.js\r\n\r\n// Importe os módulos necessários\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [keyword, setKeyword] = useState('');\r\n  const [news, setNews] = useState([]);\r\n  const [filteredNews, setFilteredNews] = useState([]);\r\n  const [searchClicked, setSearchClicked] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const apiKey = 'e2b489b9e52d4baf8d0b090a9c1d9319';\r\n      const response = await axios.get(\r\n        `https://newsapi.org/v2/everything?apiKey=${apiKey}&q=${keyword}&pageSize=20`\r\n      );\r\n\r\n      // Verifique os dados recebidos antes de enviar para o backend\r\n      console.log('Dados recebidos do servidor:', response.data.articles);\r\n\r\n      // Envia as notícias para o backend apenas se os dados estiverem completos\r\n      if (response.data.articles && response.data.articles.length > 0) {\r\n        await axios.post('http://localhost:3000/api/news', {\r\n            news: response.data.articles.map((article, index) => ({\r\n                id_noticia: index + 1,\r\n                titulo_noticia: article.title,\r\n                conteudo_noticia: article.content,\r\n                data_de_publicacao: article.publishedAt\r\n            }))\r\n        });\r\n      } else {\r\n        console.error('Erro: Dados recebidos incompletos ou vazios');\r\n      }\r\n\r\n      // Filtra as notícias com base na palavra-chave\r\n      const filteredNews = response.data.articles.filter(\r\n        (item) => item.title.toLowerCase().includes(keyword.toLowerCase())\r\n      );\r\n\r\n      // Ordena as notícias por data de publicação (mais recente primeiro)\r\n      filteredNews.sort((a, b) => new Date(b.publishedAt) - new Date(a.publishedAt));\r\n\r\n      // Atualiza o estado das notícias no frontend\r\n      setNews(response.data.articles);\r\n    } catch (error) {\r\n      console.error('Erro ao buscar notícias:', error);\r\n    }\r\n  };\r\n   \r\nconst handleClick = async () => {\r\n  try {\r\n    // Faça sua busca aqui...\r\n    // Supondo que você tenha os dados da notícia disponíveis em title, content e date\r\n\r\n    for (const item of news) {\r\n      // Insira os dados da notícia no banco de dados\r\n      await axios.post('http://localhost:3000/api/news', {\r\n        title: item.title,\r\n        content: item.content,\r\n        date: item.publishedAt\r\n      });\r\n    }\r\n\r\n    console.log('Notícias adicionadas com sucesso!');\r\n  } catch (error) {\r\n    console.error('Erro ao adicionar notícias:', error.message);\r\n  }\r\n\r\n  // Define a palavra-chave, marca que o botão de busca foi clicado e chama a busca\r\n  setKeyword(''); // Limpa o estado da palavra-chave se desejar\r\n  setSearchClicked(true);\r\n  handleSearch();\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notícias Globais</h1>\r\n      <div>\r\n        <label>Pesquisar por palavra-chave: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={keyword}\r\n          onChange={(e) => setKeyword(e.target.value)}\r\n        />\r\n        <button onClick={handleClick}>Buscar</button>\r\n      </div>\r\n      <ul>\r\n        {news.map((item, index) => (\r\n          <li key={index}>\r\n            <h3>{item.title}</h3>\r\n            <p>{item.description}</p>\r\n            <p>Data de publicação: {new Date(item.publishedAt).toLocaleDateString()}</p>\r\n            {/* Outros detalhes da notícia... */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}