{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rafae\\\\onedrive\\\\\\xC1rea de Trabalho\\\\noticias_globais\\\\frontend\\\\noticias-globais-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\n\n// Importe as dependências necessárias\nimport React, { useState } from 'react';\n\n// Componente funcional App\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estado para armazenar o item clicado\n  const [clickedItem, setClickedItem] = useState('');\n\n  // Função para lidar com o clique no botão\n  const handleClick = item => {\n    // Faça o que você precisa com o item clicado (por exemplo, salvar no MongoDB)\n    // Aqui, estou apenas definindo o estado para exibir uma mensagem\n    setClickedItem(`Você clicou no item ${item}!`);\n  };\n\n  // Lista de itens (pode ser qualquer coisa, como números, strings, etc.)\n  const items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [items.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(item),\n      children: [\"Item \", item]\n    }, item, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)), clickedItem && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: clickedItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2ErgYdwPJ3eRkJ4znYQWojqbF04=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","clickedItem","setClickedItem","handleClick","item","items","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rafae/onedrive/Área de Trabalho/noticias_globais/frontend/noticias-globais-frontend/src/App.js"],"sourcesContent":["// App.js\r\n\r\n// Importe as dependências necessárias\r\nimport React, { useState } from 'react';\r\n\r\n// Componente funcional App\r\nfunction App() {\r\n  // Estado para armazenar o item clicado\r\n  const [clickedItem, setClickedItem] = useState('');\r\n\r\n  // Função para lidar com o clique no botão\r\n  const handleClick = (item) => {\r\n    // Faça o que você precisa com o item clicado (por exemplo, salvar no MongoDB)\r\n    // Aqui, estou apenas definindo o estado para exibir uma mensagem\r\n    setClickedItem(`Você clicou no item ${item}!`);\r\n  };\r\n\r\n  // Lista de itens (pode ser qualquer coisa, como números, strings, etc.)\r\n  const items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n  return (\r\n    <div>\r\n      {/* Mapeie os itens e crie botões para cada um */}\r\n      {items.map((item) => (\r\n        <button key={item} onClick={() => handleClick(item)}>\r\n          Item {item}\r\n        </button>\r\n      ))}\r\n\r\n      {/* Exiba a mensagem do item clicado */}\r\n      {clickedItem && <p>{clickedItem}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAMO,WAAW,GAAIC,IAAI,IAAK;IAC5B;IACA;IACAF,cAAc,CAAE,uBAAsBE,IAAK,GAAE,CAAC;EAChD,CAAC;;EAED;EACA,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAE7C,oBACEP,OAAA;IAAAQ,QAAA,GAEGD,KAAK,CAACE,GAAG,CAAEH,IAAI,iBACdN,OAAA;MAAmBU,OAAO,EAAEA,CAAA,KAAML,WAAW,CAACC,IAAI,CAAE;MAAAE,QAAA,GAAC,OAC9C,EAACF,IAAI;IAAA,GADCA,IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAET,CACT,CAAC,EAGDX,WAAW,iBAAIH,OAAA;MAAAQ,QAAA,EAAIL;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV;AAACZ,EAAA,CA3BQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}